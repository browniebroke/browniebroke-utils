[build-system]
build-backend = "setuptools.build_meta"
requires = [ "setuptools" ]

[tool.ruff]
target-version = "py39"
line-length = 88

lint.select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # flake8-docstrings
  "E",   # pycodestyle
  "F",   # pyflake
  "I",   # isort
  "RUF", # ruff specific
  "S",   # flake8-bandit
  "UP",  # pyupgrade
  "W",   # pycodestyle
]
lint.ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D107", # Missing docstring in `__init__`
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the first line
  "D401", # First line of docstring should be in imperative mood
]
lint.per-file-ignores."setup.py" = [ "D100" ]
lint.per-file-ignores."tests/**/*" = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "S101",
]
lint.isort.known-first-party = [ "browniebroke_utils", "tests" ]

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=browniebroke_utils --cov-report=term-missing:skip-covered"
pythonpath = [ "src" ]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload",
  "if TYPE_CHECKING",
  "raise NotImplementedError",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = [
  'setup.py',
]

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[tool.semantic_release]
version_toml = [ "pyproject.toml:project.version" ]
version_variables = [
  "src/browniebroke_utils/__init__.py:__version__",
]
build_command = """
pip install uv
uv lock
git add uv.lock
uv build
"""

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "chore.*",
  "ci.*",
  "Merge pull request .*",
]

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.noop]
match = "(?!main$)"
prerelease = true

[dependency-groups]
dev = [
    "pytest<9.0.0,>=8.0.0",
    "pytest-cov<7.0.0,>=6.0.0",
    "pyfakefs<6.0.0,>=5.0.0",
]

[project]
authors = [
    {name = "Bruno Alla", email = "alla.brunoo@gmail.com"},
]
license = {text = "MIT"}
requires-python = ">=3.9"
dependencies = [
    "xmltodict<1.0.0,>=0.14.0",
]
name = "browniebroke-utils"
version = "1.2.0"
description = "A collections of small scripts."
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
"Bug Tracker" = "https://github.com/browniebroke/browniebroke-utils/issues"
Changelog = "https://github.com/browniebroke/browniebroke-utils/blob/main/CHANGELOG.md"
Twitter = "https://twitter.com/_BrunoAlla"
Mastodon = "https://fosstodon.org/@browniebroke"
repository = "https://github.com/browniebroke/browniebroke-utils"

[project.scripts]
pych-prettier = "browniebroke_utils.setup_prettier:main"
pych-pywatchers = "browniebroke_utils.setup_pywatchers:main"